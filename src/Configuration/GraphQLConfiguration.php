<?php

/**
 * GraphQL Service configuration, which must be passed from the service initially.
 */
class GraphQLConfiguration
{
    /**
     * Directory belonging to the GraphQL controllers in the project.
     *
     * @var string
     */
    protected $controllersDirectory;

    /**
     * Namespace belonging to the GraphQL controllers in the project.
     *
     * @var string
     */
    protected $controllersNamespace;

    /**
     * PSR-4 logger instance for the GraphQL service.
     *
     * @var mixed
     */
    protected $logger;

    /**
     * Set to true to enable additional logging.
     *
     * @var bool
     */
    protected $inDevMode;

    /**
     * Name of the TypeRegistry auto-generated by the graphql-generator tool.
     *
     * @var string
     */
    protected $typeStoreClassName;

    /**
     * Sometimes, some types are not seen by a GraphQL documentation browser. Putting their FQN here
     * will display them in there.
     *
     * @var string[]
     */
    protected $additionalGraphQLTypes = [];

    /**
     * Configured type registry.
     *
     * @var TypeRegistryInterface
     */
    protected $typeRegistry;

    /**
     * @return string
     */
    public function getControllersDirectory()
    {
        return $this->controllersDirectory;
    }

    /**
     * @return string
     */
    public function getControllersNamespace()
    {
        return $this->controllersNamespace;
    }

    /**
     * @return mixed
     */
    public function getLogger()
    {
        return $this->logger;
    }

    /**
     * @return bool
     */
    public function isInDevMode()
    {
        return $this->inDevMode;
    }

    /**
     * @return string
     */
    public function getTypeStoreClassName()
    {
        return $this->typeStoreClassName;
    }

    /**
     * @return string[]
     */
    public function getAdditionalGraphQLTypes()
    {
        return $this->additionalGraphQLTypes;
    }

    /**
     * @return TypeRegistryInterface
     */
    public function getTypeRegistry()
    {
        return $this->typeRegistry;
    }
}